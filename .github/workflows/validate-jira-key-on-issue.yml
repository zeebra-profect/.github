name: Validate Jira Key 

on: 
  workflow_call:
    inputs:
      jira_key_prefix:
        description: 'Jira Key Prefix'
        required: true
        type: string
    secrets:
      JIRA_BASE_URL: {required: true}
      JIRA_USER_EMAIL: {required: true}
      JIRA_API_TOKEN: {required: true}

permissions:
  issues: write

jobs: 
  validate:
    runs-on: ubuntu-latest
    steps:

      - name: Login to Jira
        uses: atlassian/gajira-login@v3
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL}}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL}}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN}}
          JIRA_API_URL: "${{ secrets.JIRA_BASE_URL}}/rest/api/3"
          
      - name:  Parse Jira key from issue
        id: parse 
        run: |
          python3 - << 'PY'
          import os, json, re
          with open(os.environ["GITHUB_EVENT_PATH"], "r", encoding="utf-8") as f: 
              ev = json.load(f)
          body = (ev.get("issue", {}) or "").get("body") or ""
          m = re.search(r"[A-Z]+-\d+", body)
          key = m.group(0).strip() if m else ""
          with open(os.environ["GITHUB_OUTPUT"], "a", encoding="utf-8") as out:
              out.write(f"jira={key}\n")
          PY

      - name: Validate format
        id: format
        run: |
          KEY="${{ steps.parse.outputs.jira }}"
          PREFIX="${{ inputs.jira_key_prefix }}"
          if echo "$KEY" | grep -Eq "^${PREFIX}-[0-9]+$"; then
            echo "ok=true" >> $GITHUB_OUTPUT
          else
            echo "ok=false" >> $GITHUB_OUTPUT
            echo "msg=- 형식 오류: ${PREFIX}-123 형식을 사용하세요." >> $GITHUB_OUTPUT
          fi
      
      - name: Validate existence
        id: exist 
        if: steps.format.outputs.ok == 'true'
        run: |
          KEY="${{ steps.parse.outputs.jira }}"
          RES=$(curl -s -H "$JIRA_AUTH_HEADER" "$JIRA_API_URL/issue/$KEY")
          if echo "$RES" | jq -e .key >/dev/null 2>&1; then
            STATUS=$(echo "$RES" | jq -r .fields.status.name)
            echo "ok=true" >> $GITHUB_OUTPUT
            echo "status=$STATUS" >> $GITHUB_OUTPUT
          else 
            echo "ok=false" >> $GITHUB_OUTPUT
            echo "msg=- Jira에 존재하지 않는 키이거나 권한이 없습니다: $KEY" >> $GITHUB_OUTPUT
          fi

      - name: Comment on failure
        if: steps.format.outputs.ok != 'true' || steps.exist.outputs.ok != 'true'
        run: |
          MSG: "Jira 키 검증 실패:\n"
          if [ "${{ steps.format.outputs.ok }}" != "true" ]; then
            MSG="$MSG${{ steps.format.outputs.msg }}\n"
          fi
          if [ "${{ steps.exist.outputs.ok }}" != "true" ]; then
            MSG="$MSG${{ steps.exist.outputs.msg }}\n"
          fi
          gh issue comment ${{ github.event.issue.number }} --body "$MSG"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Ack on success
        if: steps.format.outputs.ok == 'true' && steps.exist.outputs.ok == 'true'
        run: |
          gh issue comment ${{ github.event.issue.number }} --body "Jira 키 확인 완료: \`${{ steps.parse.outputs.jira }}\`"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update issue title
        if: steps.format.outputs.ok == 'true' && steps.exist.outputs.ok == 'true'
        uses: actions-cool/issues-helper@v3
        with:
          actions: "update-issue"
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "[${{ steps.parse.outputs.jira }}] ${{ github.event.issue.title }}"